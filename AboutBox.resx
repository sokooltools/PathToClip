<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="logoPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAIAAAACACAYAAADDPmHLAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAABe5SURBVHhe7Z17rGXVXce5j4GBGQYZaXgVKYUWK1UwFmxsA7RFbKhEhSnI49xrSYD6iDXERhse
        FmOKmNT+Y0lNjdCmkGja8rA8Zu6dAvbxR2spVGvUKKKmMJR53LGNKabx+Pvuu377ftdv//bea+19zuUe
        5nyTTxj2+q3vXuv3W+ecffbZe9/Dppqqty666MIZJWzqpalfP/X1Q6cbhG8IPxCGUyYa1BC1RE1bF8Tx
        wi7BM5oy+aC2qLErrI7k4s/MzJR47blM/fqR4Ycau8JbhNchgneUuMNGpn6viN/1QkX4nOCg+4Xo7UIO
        KuYsoamTpn7r4ocaopZcW9S6InvAVxZfjHFEiR3ME/j/TkeZ6Bf6T/06CP1C/1Q/1JJri1pXxAGgEExp
        J0yfwU/91t/PrS+rEgDTYL6JSNmZK/QL/ad+HYR+oX8Xv0p9rSoBYqxvM5ucAwwrbnPb+UAFnoE+yeBE
        TP2a1VafOECM+TOmWAAmxqq2HYPk4gN4YnsIyRL6hf6WqV+9ovqgr+1fNoYCRQcZ3B6wctuxE6F8B6EF
        MC1WgtDP+HT1i+qD/tajbHQWAAIjA8Gq0o5+QjFgLr6254r9DK+2YhVCP+PTx49rU78AtEjSiAUA1nvw
        Vwo/FKIBA15EiheXyqHqh397dYiCJGBa/AwmyQ//79UiClzdlC8YU8Gnxe/AuP3C9jWF4kSdhGzBhwo+
        LX4Hxu1HbWsKBeLGTtidmR3m8EPpe6VZRKmLyRX6GZ9Dwa/8FufUY01hJ9yYje6A8eISmBZ/tH7lApAm
        piIbkAwXXfHiEpgWf/R+WAD4ldDmuiIbkIQtPPDiEpgWfzx+qedx2gNYMKWdMJOe3FnhRuEp4WWhzIld
        6IDbcxmRH8aIsd54zjk/eYSZqxYfsv0qag1QwZR2wkx68U8QlgSbi1EVq2QcfrOzs8tbt245pWa+tk9F
        rQEQTGkHzKQXH6/8iS2+gkXw1reee7gzX9uvotYAmFJCc5LrCv2Mzyvph7d9m4MouYoXl8o6+eH6Tivb
        t6LGACTRJLXglFNOxivHu4/Air2HK8sLw327BiU0+M5wEhL8rPA5yu0PbNly1GudOW+oxY63fHnVP2Tm
        i7lY8dxARbUBujOL7BifmXWXkltF7Vx8XQA2JgdNAOPFEVbRAd8kFF/BIjDzxVysuB1U5AaEneFokgeu
        r/ym+wisyjYM1i4Abs+Fi654cQarsg397XyFDVl8RZp4bsCqrb0aIMZu8QUMvu0+AqtiuxaIi4+PA23P
        Rf0YL87BqtiuHs58c3Xm3NzcMcaH/c4UthWRiUI/48N+SfMjKqoEiLFeFGJ3BrXeR8Cyn/lc/K708QvD
        YkWLyJlvjo4V1Ov78lH5tPEr2gPfF74pNAr9yIPR8amfYtXWHgeIMV8RZHcG1d5HYIV+fYrl0dcvDK0Q
        xqeFV5z5Jkv6v5m9Zmdn/sX4nSVw7v5ZqBX6hf4WHh/7AauoHX1N/7XGkABeAICD7Y0GLwiu0E/Y1KdY
        FuvVxS8MrxwfFyzMv1Px0W9+fv4X2EveAZ40fhcJnL8nBFc6Pgc7PvYDVlE7+luPsjEkgBeALb691ehh
        oSL0E4oB9ykWwz59/Oz4uGDSVLTnSv3m5+feZ/zuW40otSDofrz2Qjw+g7c42Q9YRe3wsD5Fgw5aGrEA
        gAZFBoaBECnsoBw0JaMz6sF4cSkkjC9VZR8el+OXhR0f4RUfsh5W0Zg8n6JBgySAiw+xOfNFIRL6CdHA
        +yQD6LgYLy6VhPGlqoi3Y3P8srDjC9QVH7IepdDPjsvzKhooyEqNLY8LpWAcBhshTV7fJHjwNL7OoH/C
        +FJVGRvA9q6gvx2f0FR8yPoUQj9hzhnbmoI5d44DVmXbmeIjIOzMDlwH7/VrhQduJtAJ9UgYX6vQT/0Y
        aeqMejjja5P10noUx3HO2NYUdsCNcUAs9yAw7IwHHQ3eOxBrY1QHfAr72PGJeD6gUehHHgz8/k1gL5z0
        YVXa0c/4sF+K2A/zK4sPRrkAoMrXQPFoHLxXkCa4WIoXl4r1suMT8XxArdAv9Leo3/8I7HW0wIra5VvD
        NseL/VLE++MFXi4AE1NRa4BReSII5kcfvdX+eBIN3itKHbZYwItLxfOz4xMlzR/9aI7efPksH/iewKq0
        O17sl6rSE/UgHyyATtcEtqk4FaxvLbOzsw/SIqgM3iuMh1csLy6VOr8wLFbr/DGvMD8Lz7ftLF/ULrnT
        s4R1fqlSP28BwK/cZ6Ci1gCjG3RnjGyv689tLi1+2bT4WXFbpR1JpKSWSJPtl0zm+NoU+YTxafGLdkNF
        rQEqmOKyI3nVL/FOpampv22PYJ8avywS/Kxq2zHfkFCL98pKosP4aoVxWC8an6rVvzUAgmkw34S3fF0E
        0tTW34spsIOv8Usm0c/Kbef5GupeWa10HJ8rjAPjsX40PlWrf2uA7ozBO4E0ZV8SptiBAy8ulQw/q0q7
        N99A0yurkR7jqwjj0DE5flbs7bU3B/DODHalubIHZ6DuAK0rOX5hWKxo/piXmWfqfP9aYK+rhTJ/8o75
        WS6WULTnSv0U9ZMmxYrbvPb6ALszIqn4kC1ATrFSyPULw2JF83fmmjrfLwvsdSH6qYcsgK+YYl0oZIn9
        FFN8YNXW7geEneFoMtqhkFx8iJOfW6w2uviFYbHKuSOZPeYbneUTrx9nn9nZmWdNsexZwkZhHOynSBN7
        Aqu29mqAGI+k+JAmvkuxmujqF4bFKuaN4jgLIGe+uLxrRfg/Ybh9+7HHspd4P83tgj1LWCuMg70IjE/r
        pli1tVcDxFgvCvE+Y7JRD8aLS6Wnn1XkExKryc3Wpk3zWzZvPgLn+LlQ7HeUcPrqP9uFfsbH+rXOz1BR
        FCDGfEWQ9xmTBSdX8eJSGYFfKSTRemHO2B5CsoR+ob9lnH618wuK2tHX9F9rDAngBeA9JzAZm1zgxaUy
        Ir9CSIKABf4y+8nB2okhJEvq5zDO4uMGHZ5b640h6G881hqRAGnkBYDAyCAVTqrixaUyQr8ouVLwbxq/
        BwQkNlnsZxh38TFWnlvrrWHwMD6rDZoEacQCAEWQdyDVRtcDtDrYR8blJSNZ6Ecem+bm5n6jx2Iq0Nwx
        XlwqPfzcm0PZw8tb0aBBElAWH/IK0gQXS/HiUrFeoXAjKT7AwxWkyb09PAXNG+PFpdLDD7frRXnBfK0P
        tq22rqlooKBIXlHqsMUCXlwqnp83gRShHwruAL/aB0Q0wcml/HWmhx/GHn1sYV5C/2sCvcJ4eMXy4lKp
        8wvDylJIRl3xVbWPiPHgxJoEd6KDnz4iBm/70YsC8xKK4zjHa00hAdwYB6zKtlfgQTs7zKbFz0q34wcp
        /DAVJSQko634yUI/47MR/cpvcY35CzvhxjhgVbY9govk7CybBD8r2w7weXh8SMaokzspfuUCkCamorYA
        215iC+XsLItEPysvBuyiZDCHQvEBFsBIrgm07QWJxUomw8/Kiyn6y1e895ukHCrFB1gA8LO5qagxwB6c
        gboDtK7k+IVheSrvW9AFNDs7+xQlZCTJffruq096/uFr3ruyNLhtZffCvTKmrwv/LuwT/jeAf2Pb1xFz
        cHlw24GlwWXfe+R9r7F+xDiKDzXWF2oMkElEBcgpVgq5fmFYrqTgJ2jxAz8ICemc3OuvP/fw5/7m2p99
        6bHBx/buHPx92/jagAe8nnvoqvOuu+48PNat1/hCfwv7NdYXagzgwdtC9U1GF78wrIowaUxeiv4CLwIs
        ihCSpf/c/Wvb9jw6+OBLOxf+MWd8TbAPgPf+pYWbvvv4e7eG3SZL5+tgF1NjfaHGgLrBA55cLl39wrAi
        YdKaACn4o1p8aQKNj7Cx2r90wzEruxZvkfHs6zK+OqyX8dt3cGnxFuw7DKNRPF+D906ieVAqagsoX00M
        tnelp18kTJqToA9pkKY6XA2Hh80cWFpcOLC88GJLsbJJ91vcc3D3YICxhGFVZOdL1PVpnX9tAEy5SIo0
        dWYEfqUwPkpAiTTh1nWvL6hoZfm61x9cXvxbFCG9WGl09HsSYwrDKyVzyy0+1Dp/NwCmQnkmqWOxIqxX
        R79CYXx1yUheACtLi5dLwg8i8R2LVUtPvxV8cwjD7Fp8qHH+UCUApgK+SpSXhHUsVgn79PRrS4Z9Do+l
        0PDDH56Vt9w7NeE9i1VhdH6Ldz744Mmzzlx1vm1y58+qBIixXhRSPuTJH1wanIS+fpg0xuWgyXhE4PlU
        DgKHf3fDpoPLC/eo5yjHB0btJ18dP/3xD114ZM1828S5ABVFAWLMVwQVC8AbVCo2EX39MCYHTgYeXcdz
        qhRfXlX3q9+oxzcuP/nK+CAtgtTiQ5wLfQFF/ctGvC1LIy+AeW9QqXASFC8uFfSXMTUV3z7AAr8QlsLb
        /sHlwafYz8L7y2XcfngnwMdBmE6qOB/ZC2DGG1gKdvDAi0tFPWRMTcW3j7DBz8OlJuMzf5V6v8U7w3RS
        xfmoXwB6YCaNWABAgyKDFNSL0TY7Ue5X184+Mi5b/IoHcb1QKBztF571ye3Gevvxt4MERTWgvJUqGijB
        XHyIE9qK+jDczhMB3Oa1Wy9TfKjiEdgpFMJ3avFagV9bcnN5hfxWVnYOTgvTqxXyxLmTTe0LYHVTJE1o
        K7wz8ouwk2lqx+StnzOBiodQXBAiFGf4NthJnloy/Z5MOGM49ucElvCOzA4j7ETq2jUBjp+VbtdLwsq3
        fQinVtmP0X11YVR+//RXO4afveNdnfzkq+y1YZqRQvGL4zinFmtKXACNCjvTz2WmdnU2Cf2MT2c//LjS
        5dz+i49eM/zLW84fXv6O1w1PP3nb8KjN8wX4N7b9xc3nD59/+OpkP49fvuDU4Wt+ZHORcxToW/de3sFv
        cY/9AQl5EspvcWNdAGFnIykWhH7Gp5df+FUvSmxbcj912wXDU0/YanNSogl93YlHD+++9YKMYsW87aeO
        j/zu+8N3Jo2vwu7BzeJTCHminJULQJqYivjxLiA6cVInszNmQxQfv+dLMpN/0t2/NBj+9hVncR4qaLEY
        9EFfz7OJ91/2psjnQ4vn5Bd/lb24ngB5Mnmb37x580lmDtF5EVXx3D+i9fdzZ2fKhig++uFijtTigy7F
        17YPXHmW69nEx3/3bZHXpW8/1Y1LAReVmLxtOvLII1H8xvMiqrY/AlWBB654camM2m92dmb4lU/+UnLx
        8bbv+Sxe8obhE3e9Z/idL1wjXD384p+9Z7hwyRvd8X36Dy5wvT0wnsfv+sVovvhI8WJT+KrMFXNmPzu+
        QHSArMKrrOnPwEXwTlp2lsQ4/M4587jk4uOA78fMZz4Ozj7/xxcV7eyjoE0P4BQcN3z3sWsr/hb1eOGR
        a4ZHbJor5zsr//2vh65y+zShfme/8Ufb8leeF/GEt/zWRaA7YLy4VMbl90c3vqVMjJc0Bkf71qep+NoP
        MbYfvLRd4XaMjb3efMb2qP3Rj7270r8J9sKcG/JXnhdpEt4JvOf+FWhyGRuTwzj9vvTnlxZJ8ZJmwdc6
        9sHbPrZzchXbd0Fiue+Od55WidE2HRv7XXXx6VH/O3/rvEr/OtgHfOkTl0ZegnteJFs4oLIHGIENc8DH
        PrhuHwnxkuaB7/ZiU4LPfJvcOj/Ect8zXrutEoPtvDjZ745fPzfqf+27z6j09+Bxsd9/P37VceIzOtnk
        Ehuy+KC4acMkrAmc4BGrEhzwecn12COf49x3y5HzlRguvi4AbfvCRy+O+p/9hu1RXw87NvbL/JGoWSG5
        OJkQJVjYsMUHxR07lLA2xKqEX6E2uV2wXtbvuft/Vfa5tv/Nh88NX2o4kGzzO7i8cKv49JckciKLL8yE
        27WixDQhdmXx7QLw4lNhnya/U47fUo4BfPWTl7pxKX4HlgefEY/+kkTqRSFRckNzltDP+IzVTxKBe/Uq
        yalDupTF5wXgxabCRWrzu+TnTokWwCd+7+2VmHS/wdfEo58kkXxFUJTcXKEfeTBj85NE4KZMJzk+XHxd
        AF5cKrZQbX6/v3B2tAB+c8dPRO2Zfs8iB01CrjhfkaQBlx/zAgATU3xIkoA7c73kVEAy7QLw4lKxhQJe
        HHPv7e+IFsD5P31C2dbBby9yUCfkSgmb1iQbtfi8ACaq+JAkAbdne8mJ0IRy8aW7G5sCF0nx4izPfOay
        aAFs33ZEsb2jn/egyEKSK9QXVBdA2MgLAExc8SFJQusC4KRy8YEX3wb7KV5cHcdsPTxaBPbagAw/dwFI
        rrT4xQIIm1eFDdQ40cWHJAmNHwE2sVx84PVpwvoBL64JvTYAYDx8bUCmX/QRgDwJWtOkBZB7zXmp4JNV
        rCahn/FJ8pMk1B4EclIV6RLh9avD8/Pi2sC1Adi3vhvptQEd/MqDQORJ0OLrAnCLXy6AsDlbwSO7WHVC
        P+OT7CdJcL8GcpE4udKl0wKo8+vCXR+sXhvQzW/1ayDyJOhxXLkA0BZJNuoC6FQoKPTvVCxP6Gd8svy8
        E0G2UJxc6ZK9AJr8uvCEuTbgtJOqvymkgBNByJOgxdcF4L+4peFVVXwID2TipLQVS7pkLYA2v1zQn68N
        AF2vDVhZWriVclYuAJnX6CXGG674EH4Q0YTYQoEoYYL9MQg/8NgYxXrhhyPu6/0YxO2A29gL1wag+BqX
        e20AwA9hlLdDr/gQHsWGZHByFZsw4P0c7MV5fqk/BzO63XpddfEZUVzOtQEAHk/dt+NEyh0WQKd6NAqm
        tBPmFS8+hH76ODfGSxqouyCEsV7ql3NBiIJtnl/XawMA+sucv0W5O3SLj/54Dh8n10ua0nRJGGAf9vtc
        h0vCQJ1fl2sDgHpgzn3z1yhNrsOGKj7Agx05uU3golB7I4heFKoeDPp0vSi0zg/kXhsA2AcPnuyTv0Zx
        cg0brvgAT+DEQxi9pHl4l4XjgAyXgONScFwSjgM+fObbt32l7bJwLpZiY1KvDQCR187Bt/FE0675a5RN
        LrEhi6/gZgkvcXXwjSH6dYzRNo+2G0OiYgW8uJRrA4D1wk0wMudp8YmZl7583dGSrOSfhnF7FwrZpfhN
        t4bZYgEvDrRdGwAcv73/8diO5L9CmiwkUcDRZCW5ISRL6Gd8xu6Hx6/aBDaBhN4jHwe4S6et+PjMH8Xb
        PtN0bQDw/A4sr90cOjIhicJEFx8qnvu7vLiHk1gHJxVn5nALOL7W4bs9TvAA/BvbcLTf54CvDr02AAeD
        Jx531PCKd72+bPP8Dji3h49EkkicP7YLYKKKr9IHRDThJdeLS6WP3wN/8vPDf/3cFdG2Or+6B0T0kiRS
        i88LYCKLD/EjYjzqktuVdfRrfERMnZCr2nxJA34W5gUAJrb4Kn5IFNOQ3E6so1/SQ6KskCslbFqTbNTi
        8wKY+OKr+EeiluR2Yj39Duxe+JUwrWRJroprPpCzSt7CRl4A4FVTfJU+KLIpuV1YX7/sB0Vy8YsFEDav
        Chuo8VVbfOgbv/OBOTxutT65+VivcfrJsczdOZ/7yJOgNU1aAK+Ky8I8oR/633PH5Ufhwcs2uV3gIq2D
        3+eHj184H6bTqjBfLb4uALf44JAovoKnbuOdgJKbTUuxsmnyK175+cXX47hyAYTmNclGBBaETdkK/blI
        yoYsvoKPAz0myKWpWF1o9lu8s8PbvhZfF8BYrwnETji5+P8+xVpXv/DtoPIVsY59u2zB/LhUGvyiPxmT
        IswrzE/nCcZ6WZjuhOlbrHX34z8a1cT+olhr4P+9uFQa/J7M/Z6PeZl5grEWH28t0c6EPsV6Rf2KM4ar
        p41f1AIxKI7Fi0vF91vcg9O7uWf4MK8wv+T59lIwjwhNnbSR/IofkHYPbpYilT8l71+qom1dcPz2HpB9
        dv1hp898syXm+MbAO+v87QHaqH54/Or+5YWb9i0tftsWzCtqKuxzYGnhH/buXLjpO0s7sv90rGpU801S
        2FlEaOqkSfC7/faz5l587Jq3HNi18KdSsGe8oqYi/VH4Z/bvWvzonkcGP/ORj7yp7zvdSOfbKDHH5wzv
        rNfny6T64b4DHJ3jgUy4FQv340lxnxX2Ci8H8G/ZNvgaYhC7d+fg8ucfuRJ/Pn6s4xuLws4iQlMnTf02
        ll+rRr2jqV8/wUcJmzJ12GH/D2HIraGkXt1gAAAAAElFTkSuQmCC
</value>
  </data>
</root>